#!/bin/bash

kc_cfg_file="/etc/kafka/connect-distributed.properties"

: ${KAFKA_CONNECT_BOOTSTRAP_SERVERS:=$KAFKA_PORT_9092_TCP_ADDR:$KAFKA_PORT_9092_TCP_PORT}
: ${KAFKA_CONNECT_REST_HOST_NAME:=$HOST}
: ${KAFKA_CONNECT_REST_PORT:=$PORT0}
: ${KAFKA_CONNECT_GROUP_ID:=connect-cluster}
: ${KAFKA_CONNECT_KEY_CONVERTER:=io.confluent.connect.avro.AvroConverter}
: ${KAFKA_CONNECT_VALUE_CONVERTER:=io.confluent.connect.avro.AvroConverter}
: ${KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE:=true}
: ${KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE:=true}
: ${KAFKA_CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL:=http://$HOST:8081}
: ${KAFKA_CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL:=http://$HOST:8081}
: ${KAFKA_CONNECT_INTERNAL_KEY_CONVERTER:=org.apache.kafka.connect.json.JsonConverter}
: ${KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER:=org.apache.kafka.connect.json.JsonConverter}
: ${KAFKA_CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE:=false}
: ${KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE:=false}
: ${KAFKA_CONNECT_OFFSET_STORAGE_TOPIC:=__connect-offsets}
: ${KAFKA_CONNECT_CONFIG_STORAGE_TOPIC:=__connect-config}
: ${KAFKA_CONNECT_OFFSET_FLUSH_INTERVAL_MS:=60000}


export KAFKA_CONNECT_BOOTSTRAP_SERVERS
export KAFKA_CONNECT_REST_HOST_NAME
export KAFKA_CONNECT_REST_PORT
export KAFKA_CONNECT_GROUP_ID
export KAFKA_CONNECT_KEY_CONVERTER
export KAFKA_CONNECT_VALUE_CONVERTER
export KAFKA_CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE
export KAFKA_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE
export KAFKA_CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
export KAFKA_CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
export KAFKA_CONNECT_INTERNAL_KEY_CONVERTER
export KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER
export KAFKA_CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE
export KAFKA_CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE
export KAFKA_CONNECT_OFFSET_STORAGE_TOPIC
export KAFKA_CONNECT_CONFIG_STORAGE_TOPIC
export KAFKA_CONNECT_STATUS_STORAGE_TOPIC
export KAFKA_CONNECT_OFFSET_FLUSH_INTERVAL_MS

# Download the config file, if given a URL
if [ ! -z "$KC_CFG_URL" ]; then
  echo "[KC] Downloading KC config file from ${KC_CFG_URL}"
  curl --location --silent --insecure --output ${kc_cfg_file} ${KC_CFG_URL}
  if [ $? -ne 0 ]; then
    echo "[KC] Failed to download ${KC_CFG_URL} exiting."
    exit 1
  fi
fi

echo '# Generated by kafka-connect-docker.sh' > ${kc_cfg_file}
for var in $(env | grep '^KAFKA_CONNECT_' | sort); do
  key=$(echo $var | sed -r 's/KAFKA_CONNECT_(.*)=.*/\1/g' | tr A-Z a-z | tr _ .)
  value=$(echo $var | sed -r 's/.*=(.*)/\1/g')
  echo "${key}=${value}" >> ${kc_cfg_file}
done

exec /usr/bin/connect-distributed ${kc_cfg_file}
